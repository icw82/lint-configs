root: true

env:
  browser: true
  es2020: true

extends:
  - 'eslint:recommended'

parserOptions:
  sourceType: script

plugins:
  - import
  - jsdoc

rules:
  no-multi-spaces:
    - error

  key-spacing:
    - error

  no-trailing-spaces: error

  space-infix-ops: error

  indent:
    - error
    - 4
    - SwitchCase: 1

  no-multiple-empty-lines:
    - error
    - max: 2
      maxEOF: 0

  max-len:
    - warn
    - code: 100

  max-lines:
    - warn
    - max: 1000
      skipBlankLines: true
      skipComments: true

  max-params:
    - error
    - 4

  # complexity:
  #   - warn
  #   - 8

  max-nested-callbacks:
    - warn
    - 3

  max-depth:
    - warn
    - 4

  one-var:
    - error
    - never

  id-denylist:
    - error
    - boolean
    - number
    - string
    - undefined


  brace-style:
    - error
    - 1tbs
    - allowSingleLine: true

  # Spacing

  object-curly-spacing:
    - warn
    - always

  func-call-spacing:
    - error
    - never

  semi-spacing: error

  keyword-spacing: error

  comma-spacing: error

  comma-dangle:
    - error
    -
      arrays: always-multiline
      exports: always-multiline
      functions: ignore
      imports: always-multiline
      objects: always-multiline

  object-shorthand:
    - error
    - always
    - avoidQuotes: true

  no-shadow: warn

  no-invalid-this: error
  no-this-before-super: error
  class-methods-use-this: warn

  prefer-arrow-callback: error

  prefer-object-spread: error

  no-await-in-loop: error

  no-return-await: error

  padding-line-between-statements:
    - warn
    - blankLine: always
      prev: '*'
      next: return
    - blankLine: always
      prev:
        - const
        - let
        - var
      next: '*'
    - blankLine: any
      prev:
        - const
        - let
        - var
      next:
        - const
        - let
        - var

  quotes:
    - error
    - single
    # - allowTemplateLiterals: true

  quote-props:
    - error
    - as-needed
    -
      keywords: true

  no-useless-concat: error

  semi:
    - error
    - always

  space-before-blocks: error

  space-before-function-paren:
    - error
    - anonymous: never
      named: never
      asyncArrow: always

  eqeqeq:
    - error
    - smart

  no-undefined: error

  no-else-return: error

  no-unused-expressions: error
  # no-unused-vars: error

  no-mixed-operators: error

  block-scoped-var: error

  getter-return:
    - error

  no-setter-return:
    - error

  no-return-assign: error

  radix: error

  no-throw-literal: error

  spaced-comment: warn

  jsdoc/check-alignment:
    - error

  # jsdoc/check-indentation:
  #   - warn
  #   - excludeTags:
  #     - 'example'

  jsdoc/check-access:
    - error

  jsdoc/check-param-names:
    - error

  jsdoc/check-property-names:
    - error

  # jsdoc/require-examples:
  #   - warn

  jsdoc/check-tag-names:
    - warn

  jsdoc/require-jsdoc:
    - warn
    - publicOnly:
        false
      require:
        # ArrowFunctionExpression: true
        ClassDeclaration: true
        ClassExpression: true
        FunctionDeclaration: true
        FunctionExpression: true
        MethodDefinition: true
      checkConstructors: false

  jsdoc/no-types:
    - error
